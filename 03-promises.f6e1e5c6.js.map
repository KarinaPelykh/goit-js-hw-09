{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uDASA,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKE,cAAc,UAC5BE,EAAaJ,EAAKE,cAAc,uBAChCG,EAAYL,EAAKE,cAAc,sBAC/BI,EAAcN,EAAKE,cAAc,wBAGvC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAwBPN,EAAOa,iBAAiB,SApBA,SAACC,GACvBA,EAAMC,iBAKN,IAJA,IAAMC,EAAaC,OAAOhB,EAAWiB,OAC/BC,EAAYF,OAAOf,EAAUgB,OAC7BE,EAAcH,OAAOd,EAAYe,OAE9BG,EAAI,EAAGA,GAAKD,EAAaC,IAAK,CAIrCjB,EAHiBiB,EACHL,GAAcK,EAAI,GAAKF,GAGlCG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEtEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Block } from 'notiflix/build/notiflix-block-aio';\n\nconst form = document.querySelector(\".form\");\nconst button = form.querySelector(\"button\");\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onPromiseCreate = (event) => {\n  event.preventDefault();\n  const valueDelay = Number(delayInput.value);\n  const valueStep = Number(stepInput.value);\n  const valueAmount = Number(amountInput.value);\n\n  for (let i = 1; i <= valueAmount; i++) {\n    const position = i;\n    const delay = valueDelay + (i - 1) * valueStep;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);;\n      });\n  }\n}\n\nbutton.addEventListener('click', onPromiseCreate);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","valueDelay","Number","value","valueStep","valueAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f6e1e5c6.js.map"}